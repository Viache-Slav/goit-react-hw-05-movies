{"version":3,"file":"static/js/375.440dc6d2.chunk.js","mappings":"wRAEaA,EAASC,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAUtBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4BAIpBG,EAAaL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wDAKvBK,EAAYP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gC,SCmEjC,EAlFqB,WAEnB,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAEpBG,GAAWC,EAAAA,EAAAA,MAsBf,OAnBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGaC,EAAAA,EAAAA,IAAWxB,GAAS,KAAD,EAAxCM,EAAYe,EAAAI,KAElBlB,EAAgBD,GAEhBK,EAAUL,EAAaI,QAAQW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAG/BM,QAAQC,IAAI,gCAA+BP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEvD,kBAZc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAafhB,GACF,GAAG,CAACf,KAIFgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAAC7C,EAAM,CAAC8C,QAAS,kBAAMxB,GAAU,EAAE,EAACsB,SAAC,YAEpC5B,IACC0B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEF,EAAAA,EAAAA,MAACtC,EAAO,CAAAwC,SAAA,EAENC,EAAAA,EAAAA,KAACvC,EAAU,CAAAsC,UAETC,EAAAA,EAAAA,KAAA,OACEE,IAAG,kCAAAC,OAAgD,OAAZhC,QAAY,IAAZA,OAAY,EAAZA,EAAciC,aACrDC,IAAiB,OAAZlC,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,MACnBC,MAAO,SAIXV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAiB,OAAZ5B,QAAY,IAAZA,OAAY,EAAZA,EAAcmC,SACnBT,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,eAAyB,OAAZ5B,QAAY,IAAZA,OAAY,EAAZA,EAAcqC,iBAChCR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAgB,OAAZ5B,QAAY,IAAZA,OAAY,EAAZA,EAAcsC,YAClBT,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WAEHxB,EAAOmC,KAAI,SAAAC,GAAK,OACfX,EAAAA,EAAAA,KAAA,KAAAD,SAAmBY,EAAMC,MAAjBD,EAAME,GAAoB,WAKxCb,EAAAA,EAAAA,KAACrC,EAAS,CAAAoC,SAAC,4BAEXF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UAEEC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAG,OAAMhB,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UAEEC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAG,UAAShB,SAAC,kBAIvBC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,SAKjB,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  margin: 15px;\r\n  padding: 3px 20px;\r\n  border: none;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transition-duration: 0.4s;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const MovieImage = styled.div`\r\n  margin-left: 15px;\r\n  padding-right: 20px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-left: 15px;\r\n`;","// Modul MovieDetails.jsx \r\nimport { useParams, Link, Outlet, useNavigate } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getDetails } from 'consts/searchApi';\r\nimport { Button, MovieImage, Wrapper, Paragraph, } from './MovieDetails.styled';\r\n\r\nconst MovieDetails = () => {\r\n  // Pobranie identyfikatora filmu z parametrów adresu URL\r\n  const { movieId } = useParams();\r\n  // Użycie stanu movieDetails i funkcji setMovieDetails do przechowywania danych o filmie\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n  // Użycie stanu genres i funkcji setGenres do przechowywania informacji o gatunkach filmu\r\n  const [genres, setGenres] = useState([]);\r\n  // Użycie hooka useNavigate do nawigacji pomiędzy stronami\r\n  let navigate = useNavigate();\r\n\r\n  // Efekt useEffect wywoływany po zamontowaniu komponentu lub zmianie identyfikatora filmu\r\n  useEffect(() => {\r\n    // Funkcja asynchroniczna do pobierania szczegółowych danych o filmie\r\n    const asyncFunc = async () => {\r\n      try {\r\n        // Wywołanie funkcji getDetails z identyfikatorem filmu\r\n        const movieDetails = await getDetails(movieId);\r\n        // Ustawienie stanu movieDetails za pomocą pobranych danych\r\n        setMovieDetails(movieDetails);\r\n        // Ustawienie stanu genres za pomocą gatunków filmu\r\n        setGenres(movieDetails.genres);\r\n      } catch (error) {\r\n        // Obsługa błędów w przypadku nieudanego pobierania danych\r\n        console.log('Error fetching movie details:', error);\r\n      }\r\n    };\r\n    asyncFunc();\r\n  }, [movieId]); // Zależność useEffect od zmiany identyfikatora filmu\r\n\r\n  // Renderowanie komponentu MovieDetails\r\n  return (\r\n    <>\r\n    {/* Przycisk powrotu do poprzedniej strony */}\r\n      <Button onClick={() => navigate(-1)}>Go back</Button>\r\n      {/* Warunek sprawdzający, czy dane o filmie zostały pobrane */}\r\n      {movieDetails && (\r\n        <>\r\n        {/* Sekcja zawierająca szczegóły filmu */}\r\n          <Wrapper>\r\n            {/* Sekcja zawierająca obraz filmu */}\r\n            <MovieImage>\r\n              {/* Wyświetlenie obrazu filmu z dynamicznie generowanym adresem URL */}\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${movieDetails?.poster_path}`}\r\n                alt={movieDetails?.title}\r\n                width={250}\r\n              />\r\n            </MovieImage>\r\n            {/* Sekcja zawierająca tytuł, ocenę, opis i gatunki filmu */}\r\n            <div>\r\n              <h2>{movieDetails?.title}</h2>\r\n              <div>User score: {movieDetails?.vote_average}</div>\r\n              <h3>Overview</h3>\r\n              <p>{movieDetails?.overview}</p>\r\n              <h4>Genres</h4>\r\n              {/* Wyświetlenie gatunków filmu w formie paragrafów */}\r\n              {genres.map(genre => (\r\n                <p key={genre.id}>{genre.name}</p>\r\n              ))}\r\n            </div>\r\n          </Wrapper>\r\n          {/* Dodatkowe informacje */}\r\n          <Paragraph>Additional information</Paragraph>\r\n          {/* Lista linków do stron Cast i Reviews z wykorzystaniem komponentu Link */}\r\n          <ul>\r\n            <li>\r\n              {/* Link do strony z obsadą filmu */}\r\n              <Link to=\"cast\">Cast</Link>\r\n            </li>\r\n            <li>\r\n              {/* Link do strony z recenzjami filmu */}\r\n              <Link to=\"reviews\">Reviews</Link>\r\n            </li>\r\n          </ul>\r\n          {/* Outlet do renderowania dzieci komponentu w zależności od aktualnej ścieżki */}\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","MovieImage","_templateObject3","Paragraph","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","genres","setGenres","navigate","useNavigate","useEffect","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_movieDetails","_context","prev","next","getDetails","sent","t0","console","log","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","onClick","src","concat","poster_path","alt","title","width","vote_average","overview","map","genre","name","id","Link","to","Outlet"],"sourceRoot":""}