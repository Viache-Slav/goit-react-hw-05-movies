{"version":3,"file":"static/js/313.a07302f9.chunk.js","mappings":"6QAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAIxBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIpBG,EAASL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yH,SCkDnC,EArDe,WAAO,IAADK,EAEnBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAEpCI,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAiC,QAA5BZ,EAAGK,EAAaQ,IAAI,gBAAQ,IAAAb,EAAAA,EAAI,IAG3Cc,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGD,OAHCF,EAAAC,KAAA,EAAAD,EAAAG,GAGdZ,EAAaS,EAAAE,KAAA,GAAOE,EAAAA,EAAAA,IAAaZ,GAAM,OAAAQ,EAAAK,GAAAL,EAAAM,MAAA,EAAAN,EAAAG,IAAAH,EAAAK,IAAAL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEvCQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAX,EAAA,kBAEtB,kBAPc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQfjB,GACF,GAAG,CAACH,IAYJ,OACEqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEF,EAAAA,EAAAA,MAACzC,EAAU,CAAC4C,SAZM,SAAAC,GACpBA,EAAEC,iBACF,IACMC,EADOF,EAAEG,cACIC,SAAS7B,MAC5BN,EAAgB,CAAEM,MAAO2B,EAAMG,QAC/BH,EAAMG,MAAQ,EAChB,EAMuCP,SAAA,EAEjCQ,EAAAA,EAAAA,KAAC/C,EAAK,CAACgD,KAAK,OAAOC,KAAK,QAAQC,aAAclC,EAAOmC,UAAQ,KAC7DJ,EAAAA,EAAAA,KAAC7C,EAAM,CAAC8C,KAAK,SAAQT,SAAC,eAGxBQ,EAAAA,EAAAA,KAAA,MAAAR,SACGzB,EAAWsC,KAAI,SAAAC,GAAK,OACnBN,EAAAA,EAAAA,KAAA,MAAAR,UAEEQ,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAKlB,SAAEc,EAAMK,SAFjCL,EAAMI,GAGV,QAKf,C","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.jsx"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const FormStyled = styled.form`\r\n  margin: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 3px 20px;\r\n  border: none;\r\n  &:hover {\r\n    cursor: pointer;\r\n    transition-duration: 0.4s;\r\n  }\r\n`;","// Modul Movies.jsx \r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n// Import funkcji searchMovies z modułu searchApi oraz stylów z pliku Movies.styled\r\nimport { searchMovies } from 'consts/searchApi';\r\nimport { FormStyled, Input, Button } from './Movies.styled';\r\n\r\nconst Movies = () => {\r\n  // Użycie hooka useSearchParams do obsługi parametrów zapytania w adresie URL\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  // Użycie stanu moviesList i funkcji setMoviesList do przechowywania danych o wyszukanych filmach\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  // odczytujemy nazwę zapytania z parametru linku, a jeżeli jej nie ma to mamy pusty string\r\n  const query = searchParams.get('query') ?? '';\r\n\r\n  // Efekt useEffect wywoływany po zamontowaniu komponentu lub zmianie parametru zapytania\r\n  useEffect(() => {\r\n    // Funkcja asynchroniczna do wyszukiwania filmów\r\n    const asyncFunc = async () => {\r\n      try {\r\n        // Ustawienie stanu moviesList za pomocą funkcji searchMovies z aktualną nazwą zapytania\r\n        setMoviesList(await searchMovies(query));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    asyncFunc();\r\n  }, [query]); // Zależność useEffect od zmiany nazwy zapytania\r\n\r\n   // Funkcja obsługująca submit formularza, ustawiająca nową nazwę zapytania i resetująca wartość pola input\r\n   const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const input = form.elements.query;\r\n    setSearchParams({ query: input.value });\r\n    input.value = '';\r\n  };\r\n\r\n  // Renderowanie formularza i listy filmów\r\n  return (\r\n    <>\r\n    {/* Formularz do wyszukiwania filmów */}\r\n      <FormStyled onSubmit={handleSubmit}>\r\n        {/* atrybut name określa nazwę pola, atrybut defaultValue ustawia początkową wartość */}\r\n        <Input type=\"text\" name=\"query\" defaultValue={query} required />\r\n        <Button type=\"submit\">Search</Button>\r\n      </FormStyled>\r\n      {/* Lista filmów wyświetlana jako linki do ich stron detali */}\r\n      <ul>\r\n        {moviesList.map(movie => (\r\n          <li key={movie.id}>\r\n            {/* Użycie komponentu Link do stworzenia linku do strony detali filmu */}\r\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","moviesList","setMoviesList","query","get","useEffect","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","t0","searchMovies","t1","sent","t2","console","log","stop","apply","arguments","_jsxs","_Fragment","children","onSubmit","e","preventDefault","input","currentTarget","elements","value","_jsx","type","name","defaultValue","required","map","movie","Link","to","concat","id","title"],"sourceRoot":""}