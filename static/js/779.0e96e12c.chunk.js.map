{"version":3,"file":"static/js/779.0e96e12c.chunk.js","mappings":"iQAEaA,E,OAAcC,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gC,SCiDnC,EA3CgB,WAEd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAgB1B,OAbAI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGJ,OAHIF,EAAAC,KAAA,EAAAD,EAAAG,GAGdV,EAAUO,EAAAE,KAAA,GAAOE,EAAAA,EAAAA,IAAWlB,GAAQ,OAAAc,EAAAK,GAAAL,EAAAM,MAAA,EAAAN,EAAAG,IAAAH,EAAAK,IAAAL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpCQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAX,EAAA,kBAEtB,kBAPc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQfjB,GACF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,KAAA,MAAAC,SAEsB,IAAnBtB,EAAQuB,QAEPF,EAAAA,EAAAA,KAAA,MAAIG,MAAO,CAAEC,UAAW,QAASH,SAAC,6CAKlCtB,EAAQ0B,KAAI,SAAAC,GAAM,OAChBC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EAEEM,EAAAA,EAAAA,MAACtC,EAAW,CAAAgC,SAAA,CAAC,WAASK,EAAOE,WAE7BR,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,EAAOG,YAJJH,EAAOI,GAKX,KAKf,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const AuthorStyle = styled.p`\r\n  font-weight: bold;\r\n`;","// Modul Rewiews.jsx \r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// Import funkcji getReviews z modułu searchApi oraz AuthorStyle z pliku stylów\r\nimport { getReviews } from 'consts/searchApi';\r\nimport { AuthorStyle } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  // Pobranie identyfikatora filmu z parametrów adresu\r\n  const { movieId } = useParams();\r\n  // Stan komponentu do przechowywania danych o recenzjach\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  // Efekt useEffect wywoływany po zamontowaniu komponentu, pobiera recenzje dla danego filmu\r\n  useEffect(() => {\r\n    // Funkcja asynchroniczna do pobierania recenzji\r\n    const asyncFunc = async () => {\r\n      try {\r\n        // Ustawienie stanu reviews za pomocą funkcji getReviews z identyfikatorem filmu\r\n        setReviews(await getReviews(movieId));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    asyncFunc();\r\n  }, [movieId]); // Zależność useEffect od zmiany identyfikatora filmu\r\n\r\n  return (\r\n    <ul>\r\n    {/* Warunek sprawdzający czy są dostępne recenzje dla filmu */}\r\n      {reviews.length === 0 ? (\r\n        // Komunikat w przypadku braku recenzji\r\n        <li style={{ listStyle: 'none' }}>\r\n          We don't have any reviews for this movie\r\n        </li>\r\n      ) : (\r\n        // Mapowanie recenzji i renderowanie komponentów dla każdej recenzji\r\n        reviews.map(review => (\r\n          <li key={review.id}>\r\n          {/* Wykorzystanie stylizowanego komponentu dla autora recenzji */}\r\n            <AuthorStyle>Author: {review.author}</AuthorStyle>\r\n            {/* Wyświetlenie treści recenzji */}\r\n            <p>{review.content}</p>\r\n          </li>\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Reviews;"],"names":["AuthorStyle","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","asyncFunc","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","t0","getReviews","t1","sent","t2","console","log","stop","apply","arguments","_jsx","children","length","style","listStyle","map","review","_jsxs","author","content","id"],"sourceRoot":""}